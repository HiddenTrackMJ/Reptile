


app {


  http {
    interface = "0.0.0.0"
    port = 30359
  }

  historyRankFile = "../historyRankFile.txt"

  wxMpAppId = "wx0f9648452232479f"

  client {
    appIds = ["reptile"]
    secureKeys = ["s0n2cRHksGsHxXrL1RZc"]
  }

}

dependence {

  mpAuthor {
    protocol = "http"
    host = "192.168.0.249"
//    host = 10.1.29.249
    port = 30309
    appId = "444"
    secureKey = "ddd"
    componentAppId = "wxf6c8bd61d7086bf8"
  }

  email{
    host = "smtp.exmail.qq.com"
    port = "25"
    addresserEmail = "flowservice@neotel.com.cn"
    addresserPwd = "Skld@2018"
    domain = "flowdev"  //开发
    ccAddress = ["dongruoyan@neotel.com.cn"]
  }

  experimentEndTime = 3600
  startUseWithOutRentTime = 300
  rentWithOutMailTime1 = 1200
  rentWithOutMailTime2 = 1800
  rentWithOutMailTime3 = 2100
  rentWithOutMailTime4 = 2280
  rentWithOutEndTime = 2400
  useOutMailTime = 600000

}

newsService{
  defaultDefineColumn = [
    "entertainment","sport","society","science","finance"
  ]
}

proxy{
  isWork = false
  proxyFetchUrl = "http://dev.kuaidaili.com/api/getproxy/?orderid=920034333687984&num=100&b_pcchrome=1&b_pcie=1&b_pcff=1&protocol=2&method=2&an_an=1&an_ha=1&sp1=1&quality=1&sort=1&format=json&sep=1"
}

spider{
  isWork = true
  spiderNum = 10
  spiderIdleInterval = 1 //1s

}

newsApp{

  duplicatedFilterTime = 2 //2 day

  sina {
    id = 1
    name = "sina"
    nameCn = "新浪新闻"

    increment = "time"
    useProxy = false

    columnParseCode = "gbk"
    articleParseCode = "utf-8"

    column {
      sport = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=64&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
      society = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=92&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
      military = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=93&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
      science = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=96&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
      international = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=91&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
      entertainment = "http://feed.mix.sina.com.cn/api/roll/get?pageid=382&lid=48&k=&num=50&page=1"
      finance = "http://roll.news.sina.com.cn/interface/rollnews_ch_out_interface.php?col=43&spec=&type=&ch=01&k=&offset_page=0&offset_num=0&num=60&asc=&page=1"
    }
  }

  chinanews {
    id = 2
    name = "tencent"
    nameCn = "腾讯新闻"

    increment = "time"
    useProxy = false

    columnParseCode = "gbk"
    articleParseCode = "gbk"

    column {
      sport = "http://www.chinanews.com/sports.shtml"
      society = "http://www.chinanews.com/society.shtml"
      military = "http://www.chinanews.com/mil/news.shtml"
      science = "http://finance.chinanews.com/it/gd.shtml"
      international = "http://www.chinanews.com/world.shtml"
      entertainment = "http://www.chinanews.com/entertainment.shtml"
      finance = "http://finance.chinanews.com/cj/gd.shtml"
      car = "http://finance.chinanews.com/auto/gd.shtml"
      culture = "http://www.chinanews.com/wenhua.shtml"
      education = "http://www.chinanews.com/jiaoyu.shtml"
    }
  }

  ntes{
    id = 3
    name = "netEase"
    nameCn = "网易新闻"

    increment = "time"
    useProxy = false

    columnParseCode = "gbk"
    articleParseCode = "utf-8"

    column {
      sport = "http://temp.163.com/special/00804KVA/cm_sports.js?callback=data_callback"
      society = "http://temp.163.com/special/00804KVA/cm_shehui.js?callback=data_callback"
      military = "http://temp.163.com/special/00804KVA/cm_war.js?callback=data_callback"
      science = "http://temp.163.com/special/00804KVA/cm_tech.js?callback=data_callback"
      international = "http://temp.163.com/special/00804KVA/cm_guoji.js?callback=data_callback"
      entertainment = "http://temp.163.com/special/00804KVA/cm_ent.js?callback=data_callback"
      finance = "http://temp.163.com/special/00804KVA/cm_money.js?callback=data_callback"
      car = "http://temp.163.com/special/00804KVA/cm_auto.js?callback=data_callback"
      jiangkang = "http://temp.163.com/special/00804KVA/cm_jiankang.js?callback=data_callback"
      education = "http://edu.163.com/special/002987KB/newsdata_edu_hot.js?callback=data_callback"
    }
  }
}


slick.db {
//  url = "jdbc:postgresql://192.168.0.250:5432/reptile?characterEncoding=utf-8" // dev
   url = "jdbc:postgresql://10.1.29.250:5432/reptile?characterEncoding=utf-8" // local
  //  url = "jdbc:postgresql://127.0.0.1:5432/reptile?characterEncoding=utf-8"
//    url = "jdbc:postgresql://localhost:5432/reptile?characterEncoding=utf-8"

  user = "reptile"
  password = "t20i1T8a4n25s"
  maximumPoolSize = 3
  connectTimeout = 30000
  idleTimeout = 300000
  maxLifetime = 900000
}

rule {
  declaration = "*一、声明：#本GPU服务器只作为实验室项目的机器学习实验使用，并且必须与申请时的说明相一致，不得作为其他用途（例如：非实验室项目，非机器学习程序，现网应用的机器学习服务器）。#本平台租用以30分钟为单位。#若租用GPU不使用，当持续时间达20、30、35、38分钟，平台将发送邮件提醒；当持续时间超过40分钟，系统将以不返还租金的方式为您提前结束预约以提供给其他需要的用户租用。#已租用的用户超时使用时，若下一时段无人租借将以0.5倍的租金为用户续租下一段，否则5分钟后杀死占用GPU的进程。!!*二、GPU使用方法：#请使用python3命令，启动python。!!*三、GPU环境：#241：python 3.6.6;tensorflow-1.9;mxnet-cu92 1.2.0;cuda-9.2;cuDNN-7.1#242/243：python 3.6.2;tensorflow r1.7;mxnet-c90 1.2.0;cuda-9.0;cuDNN7.0。!!*四、租金退换比例：#平台支持用户提前结束对GPU的使用，并采用时间阶梯放的方式返还租金：#5天以上， 100%退款；#48小时 - 5天，90% 退款；#24 - 48小时， 80% 退款；#12 - 24小时， 70% 退款；#6 - 12小时， 60% 退款；#3 - 6小时， 50% 退款；#1 - 3小时， 40% 退款；#0.5 - 1小时，30% 退款；#0 - 0.5小时，20% 退款。!!例如，预约了10至12点的时段，而现在是10点45分，用户选择提前结束，结束时间为11：00，则返回金额的计算方式如下：#11：00 ~ 11：15的费用按20%退款；#11：15 ~ 11：45的费用按30%退款；#11：45 ~ 12：00的费用按40%退款"
}

//akka.http{
//
//  session {
//    cookie {
//      name = "PLAY_SESSION"
//      domain = none
//      secure = false
//      http-only = true
//    }
//    server-secret = "0gfmOdf34doi2dg-aj53Kelk4;ztymc23;r3r3l*m3^20M3;l20;[+Gfdyrtyr4sKrtsyhf92dj:hf923"
//    max-age = none
//    encrypt-data = false
//  }
//
//  refresh-token {
//    cookie {
//      name = "PLAY_SESSION"
//      domain = none
//      secure = false
//      http-only = true
//    }
//
//    max-age = none
//    remove-used-token-after = 7200 seconds
//  }
//
//
//}

session {

  cookie {
    name = "reptile"
    domain = none
    path = "/"
    secure = false
    httpOnly = true
    maxAge = 1 days
  }
  encryptData = false
  serverSecret = "dg-aj53Kei2+Gfhf92*md4sK3ymc23;rl4;zt3;lmOd4do3Dr^20M0;[0gfdytyrewr3lrtsy"

}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  actor {


    my-blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"

      thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s

        # Define a fixed thread pool size with this property. The corePoolSize
        # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
        # value, if it is defined. Then the other pool-size properties will not
        # be used.
        #
        # Valid values are: `off` or a positive integer.
        fixed-pool-size = off

        # Min number of threads to cap factor-based corePoolSize number to
        core-pool-size-min = 16

        # The core-pool-size-factor is used to determine corePoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor).
        # Resulting size is then bounded by the core-pool-size-min and
        # core-pool-size-max values.
        core-pool-size-factor = 100.0

        # Max number of threads to cap factor-based corePoolSize number to
        core-pool-size-max = 256

        # Minimum number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-min = 16

        # The max-pool-size-factor is used to determine maximumPoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor)
        # The maximumPoolSize will not be less than corePoolSize.
        # It is only used if using a bounded task queue.
        max-pool-size-factor = 100.0

        # Max number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-max = 256

        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1

        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"

        # Allow core threads to time out
        allow-core-timeout = on
      }

      throughput = 100
    }

  }



}



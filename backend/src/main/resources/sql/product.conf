


app {


  http {
    interface = "0.0.0.0"
    port = 30359
  }

  historyRankFile = "../historyRankFile.txt"

  wxMpAppId = "wx0f9648452232479f"

  client {
    appIds = ["titans"]
    secureKeys = ["s0n2cRHksGsHxXrL1RZc"]
  }

}

dependence {

  mpAuthor {
    protocol = "http"
    host = "192.168.0.249"
    //host = 10.1.29.249
    port = 30309
    appId = "444"
    secureKey = "ddd"
    componentAppId = "wxf6c8bd61d7086bf8"
  }

  email{
    host = "smtp.exmail.qq.com"
    port = "25"
    addresserEmail = "flowservice@neotel.com.cn"
    addresserPwd = "Skld@2018"
    domain = "flowdev"  //开发
    ccAddress = ["zhangtao@neotel.com.cn", "dongruoyan@neotel.com.cn"]
  }

}


slick.db {
  //  url = "jdbc:postgresql://192.168.0.247:5432/titans?characterEncoding=utf-8" // dev
//  url = "jdbc:postgresql://10.1.29.247:5432/titans?characterEncoding=utf-8" // local
  //  url = "jdbc:postgresql://127.0.0.1:5432/titans?characterEncoding=utf-8"
      url = "jdbc:postgresql://localhost:5432/titans?characterEncoding=utf-8"

  user = "titans"
  password = "t20i1T8a4n25s"
  maximumPoolSize = 3
  connectTimeout = 30000
  idleTimeout = 300000
  maxLifetime = 900000
}

rule {
  declaration = "本GPU服务器只作为实验室项目的机器学习实验使用，并且必须与申请时的说明相一致，不得作为其他用途（例如：非实验室项目，非机器学习程序，现网应用的机器学习服务器）  本平台租用以30分钟为单位,若租用gpu后，有效使用时间不足租用时间的80%，将扣除0.5倍的租金作为罚款。  撤销GPU的租用规则：#1.在使用GPU的前5天撤销租用，收取10%的手续费；#2.距离使用GPU的前48小时以上，不足120小时撤销租用，收取20%的手续费；#3.距离使用GPU的24小时以上，不足48小时，收取35%的手续费；#4.距离预约期24小时内，收取50%的手续费。"
}

//akka.http{
//
//  session {
//    cookie {
//      name = "PLAY_SESSION"
//      domain = none
//      secure = false
//      http-only = true
//    }
//    server-secret = "0gfmOdf34doi2dg-aj53Kelk4;ztymc23;r3r3l*m3^20M3;l20;[+Gfdyrtyr4sKrtsyhf92dj:hf923"
//    max-age = none
//    encrypt-data = false
//  }
//
//  refresh-token {
//    cookie {
//      name = "PLAY_SESSION"
//      domain = none
//      secure = false
//      http-only = true
//    }
//
//    max-age = none
//    remove-used-token-after = 7200 seconds
//  }
//
//
//}

session {

  cookie {
    name = "titans"
    domain = none
    path = "/"
    secure = false
    httpOnly = true
    maxAge = 1 days
  }
  encryptData = false
  serverSecret = "dg-aj53Kei2+Gfhf92*md4sK3ymc23;rl4;zt3;lmOd4do3Dr^20M0;[0gfdytyrewr3lrtsy"

}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  actor {


    my-blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"

      thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s

        # Define a fixed thread pool size with this property. The corePoolSize
        # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
        # value, if it is defined. Then the other pool-size properties will not
        # be used.
        #
        # Valid values are: `off` or a positive integer.
        fixed-pool-size = off

        # Min number of threads to cap factor-based corePoolSize number to
        core-pool-size-min = 16

        # The core-pool-size-factor is used to determine corePoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor).
        # Resulting size is then bounded by the core-pool-size-min and
        # core-pool-size-max values.
        core-pool-size-factor = 100.0

        # Max number of threads to cap factor-based corePoolSize number to
        core-pool-size-max = 256

        # Minimum number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-min = 16

        # The max-pool-size-factor is used to determine maximumPoolSize of the
        # ThreadPoolExecutor using the following formula:
        # ceil(available processors * factor)
        # The maximumPoolSize will not be less than corePoolSize.
        # It is only used if using a bounded task queue.
        max-pool-size-factor = 100.0

        # Max number of threads to cap factor-based maximumPoolSize number to
        max-pool-size-max = 256

        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1

        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"

        # Allow core threads to time out
        allow-core-timeout = on
      }

      throughput = 100
    }

  }



}


